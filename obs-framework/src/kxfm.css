@import url( "observablehq:default.css" );
@import url( "observablehq:theme-air.css" );

@import url( "lib/visco.css" );

/* Framework does not resolve those:
 *
@import url( "observablehq:theme-wide.css" );
@import url( "observablehq:theme-air,near-midnight,alt,wide.css" );
*/

/* from theme-wide.css 
 * as work-around for the missing import
 */
#observablehq-main,
#observablehq-header,
#observablehq-footer {
  max-width: none;
}

/*
 *
 * Obs-Framework specific style from here on
 *
 */

.ktscontainer {
  box-shadow: 0 0 8px 1px rgba(0,0,0,.2);
}

/*
 * for mixed page layout
 */
.left  { float: left;  }
.clear { clear: both;  }

@media screen
{
  /*
   * rules to hide content that is meant for print only 
   * i.e. comments which are meant for PDF (or paper)
   */
  .printonly 
  {
    display: none 
  ; background: darkgrey
  }  
}
  
@media print
{
  /*
   * rules to hide content that is meant for screen only,
   * i.e. interactive elements that won't work on PDF (or paper)
   */

  .screenonly /* explicit elements (could be divs or spans also) */
  ,
  div #ktsConsole /*KTS console is an interactive feature which would present only the most recent message for print */
  ,
  div.observablehq--worker:has( > style ) /* Observable's presentation of style cells */
  ,
  div:has( > form > button )  /* input buttons are useless in print */
  ,
  input[type=checkbox], label:has( input:not(:checked) ) /* print no checkboxes and only labels of selected ones */
  ,
  div:has( > span > div > details )
  ,
  div > form > div > input
  ,
  div:has( > form > div > input )
  ,
  div.observablehq--worker > .screenonly
  ,
  span > div > details /* Observable's nested form */
  ,
  div button svg /* does not work because the pen icons don't live in the 'worker' frame but in top frame, where this style is not in scope */
  { 
    display: none
  ; background: darkgrey
  } 
  
  /*
   * following (use of :has) breaks a selector set in Firefox - therefore goes into a separate rule to limit damage 
   */
  body > div > div:has( hr + hr ) ~ div  
  ,
  body > div > div:has( hr ) + div:has( hr ) ~ div  
  { 
    display: none
  ; background: darkgrey
  }

  /*hr+hr
  { margin-bottom: 200px }*/
  
  /*
   * pagebreak rules
  body > div > div > h2
  {
    break-before: page 
  ; background: yellow
  }
  
  body > div > div > svg
  ,
   */
  body > div > div > hr
  {
    break-after: page 
  ; background: green
  }

  form
  ,
  .nobreakinside
  { break-inside: avoid ; display: block }
}
